% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/codon_usage.R
\name{codon_usage_psite}
\alias{codon_usage_psite}
\title{Empirical codon usage indexes.}
\usage{
codon_usage_psite(
  data,
  annotation,
  sample,
  site = "psite",
  fastapath = NULL,
  fasta_genome = TRUE,
  refseq_sep = NULL,
  bsgenome = NULL,
  gtfpath = NULL,
  txdb = NULL,
  dataSource = NA,
  organism = NA,
  transcripts = NULL,
  frequency_normalization = TRUE,
  codon_values = NULL,
  label_scatter = FALSE,
  label_number = 64,
  label_aminoacid = FALSE
)
}
\arguments{
\item{data}{Either list of data tables or GRangesList object from
\code{\link{psite_info}}. Each data table may or may not include one or
more columns among \emph{p_site_codon}, \emph{a_site_codon} and
\emph{e_site_codon} reporting the three nucleotides covered by the P-site,
A-site and E-site, respectively. These columns can be previously generated
by the \code{\link{psite_info}} function. Otherwise, the column of interest
can be specified by \code{site} and it is automatically generated starting
from a FASTA file or a BSgenome data package.}

\item{annotation}{Data table as generated by \code{\link{create_annotation}}.}

\item{sample}{Either character string or character string vector specifying
one or two sample names, respectively. If one sample name is specified, a
bar plot displaying the 64 codon usage indexes is generated. If two sample
names are specified, the function also compares the two sets of codon usage
indexes returning a scatter plot. In the latter case it also performes a
linear regression and computes the Pearson correlation coefficient.}

\item{site}{Either "psite, "asite", "esite". It specifies if the empirical
codon usage indexes should be based on ribosome P-sites ("psite"), A-sites
("asite") or E-sites ("esite"). Default is "psite".}

\item{fastapath}{Character string specifying the FASTA file used in the
alignment step, including its path, name and extension. This file can
contain reference nucleotide sequences either of genome asseblies
(chromosome sequences) or of transcripts (see \code{Details} and
\code{fasta_genome}). Please make sure the sequences derive from the same
release of the annotation file used in the \code{\link{create_annotation}}
function. Note: either \code{fastapath} or \code{bsgenome} is required to
compute the frequency of each codon along sequences, used as normalization
factors, even if \code{data} includes one or more columns among
\emph{p_site_codon}, \emph{a_site_codon} and \emph{e_site_codon}. Default
is NULL.}

\item{fasta_genome}{Logical value whether the FASTA file specified by
\code{fastapath} contains nucleotide sequences of genome asseblies
(chromosome sequences). If TRUE (the default), an annotation object is
required (see \code{gtfpath} and \code{txdb}). FALSE implies nucleotide
sequences of transcripts are provided instead.}

\item{refseq_sep}{Character specifying the separator between reference
sequences' name and additional information to discard, stored in the
headers of the FASTA file specified by \code{fastapath} (if any). It might
be required for matching the reference sequences' identifiers reported in
the input list of data tables. All characters before the first occurrence
of the specified separator are kept. Default is NULL i.e. no string
splitting is performed.}

\item{bsgenome}{Character string specifying the BSgenome data package with
the genome sequences to be loaded. If not already present in the system, it
is automatically installed through the biocLite.R script (check the list of
available BSgenome data packages by running the
\code{\link[BSgenome]{available.genomes}} function of the BSgenome
package). This parameter must be coupled with an annotation object (see
\code{gtfpath} and \code{txdb}). Please make sure the sequences included in
the specified BSgenome data pakage are in agreement with the sequences used
in the alignment step. Note: either \code{fastapath} or \code{bsgenome} is
required to compute the frequency of each codon along sequences, used as
normalization factors, even if \code{data} includes one or more columns
among \emph{p_site_codon}, \emph{a_site_codon} and \emph{e_site_codon}.
Default is NULL.}

\item{gtfpath}{Character string specifying the location of a GTF file,
including its path, name and extension. Please make sure the GTF file and
the sequences specified by \code{fastapath} or \code{bsgenome} derive from
the same release. Note that either \code{gtfpath} or \code{txdb} is
required if and only if nucleotide sequences of genome assemblies
(chromosome sequences) are provided (see \code{fastapath} or
\code{bsgenome}). Default is NULL.}

\item{txdb}{Character string specifying the TxDb annotation package to be
loaded. If not already present in the system, it is automatically installed
through the biocLite.R script (check
\href{http://bioconductor.org/packages/release/BiocViews.html#___TxDb}{here}
 the list of available TxDb annotation packages). Please make sure the TxDb
annotation package and the sequences specified by \code{fastapath} or
\code{bsgenome} derive from the same release. Note that either
\code{gtfpath} or \code{txdb} is required if and only if nucleotide
sequences of genome assemblies (chromosome sequences) are provided (see
\code{fastapath} or \code{bsgenome}). Default is NULL.}

\item{dataSource}{Optional character string describing the origin of the GTF
data file. This parameter is considered only if \code{gtfpath} is
specified. For more information about this parameter please refer to the
description of \emph{dataSource} of the
\code{\link[GenomicFeatures]{makeTxDbFromGFF}} function included in the
\code{GenomicFeatures} package.}

\item{organism}{Optional character string reporting the genus and species of
the organism of the GTF data file. This parameter is considered only if
\code{gtfpath} is specified. For more information about this parameter
please refer to the description of \emph{organism} of the
\code{\link[GenomicFeatures]{makeTxDbFromGFF}} function included in the
\code{GenomicFeatures} package.}

\item{transcripts}{Character string vector listing the name of transcripts to
be included in the analysis. Default is NULL i.e. all transcripts are used.
Please note: transcripts without annotated CDS and transcripts whose coding
sequence length is not divisible by 3 are automatically discarded.}

\item{frequency_normalization}{Logical value whether to normalize the 64
codon usage indexes for the corresponding codon frequencies in coding
sequences. Default is TRUE.}

\item{codon_values}{Data table containing 64 triplet-specific values. If
specified, the provided values are compared with the empirical codon usage
indexes computed for the sample of interest. The data table must contain
the DNA or RNA nucleotide sequence of the 64 codons and corresponding
values arranged in two columns named \emph{codon} and \emph{value},
respectively. Default is NULL.}

\item{label_scatter}{Logical value whether to label the dots in the scatter
plot. Each dot is labeled using either the nucleotide sequence of the codon
or the corresponding amino acid symbol (see \code{label_aminoacid}). This
parameter is considered only if two sample names are specified in
\code{sample} or \code{codon_values} is provided. Default is FALSE.}

\item{label_number}{Integer value in [1,64] specifying how many dots in the
scatter plot should be labeled. Dots farthest from the confident interval
of the regression line are automatically identified and labeled. Default is
64 i.e. all dots are labeled. This parameter is considered only if
\code{label_scatter} is TRUE.}

\item{label_aminoacid}{Logical value whether to use amino acid symbols to
label the dots of the scatter. Default is FALSE i.e. codon nucleotide
sequences are used instead. This parameter is considered only if
\code{label_scatter} is TRUE.}
}
\value{
A list containing ggplot objects and a data table with the
  associated data ("dt"). If only one sample name is specified in
  \code{sample}, one ggplot object is returned (a bar plot named "plot"). If
  two sample names are specified in \code{sample}, three ggplot objects are
  returned (two bar plots named "plot_NameSample1" and
  "plot_NameSample2" and a scatter plot named "plot_comparison"). If
  \code{codon_values} is specified, two ggplot objects are returned (one bar
  plots named "plot" and a scatter plot named "plot_comparison"). Please
  note: before plotting, the 64 values are scaled to make them ranging
  between 0 and 1. If \code{frequency_normalization} is TRUE, the data table
  contains raw, normalized and scaled codon usage indexes, only raw and
  scaled data otherwise.
}
\description{
This function computes empirical codon usage indexes based on either ribosome
P-sites, A-site or E-site frequency associated to in-frame P-sites along
coding sequences. Given one sample, it computes 64 codon usage indexes (one
for each triplet, optionally normalized for their frequency in CDSs) and
generates a bar plot of the resulting values. If two samples are specified,
the function also compares the two sets of codon usage indexes returning a
scatter plot. The same output is generated specifying one sample and
providing 64 triplet-specific values. Scatter plots report the result of
linear regressions between the two sets of values and the corresponding
Pearson correlation coefficient.
}
\details{
\strong{riboWaltz} only works for read alignments based on
  transcript coordinates. This choice is due to the main purpose of RiboSeq
  assays to study translational events through the isolation and sequencing
  of ribosome protected fragments. Most reads from RiboSeq are supposed to
  map on mRNAs and not on introns and intergenic regions. BAM based on
  transcript coordinates can be generated in two ways: i) aligning directly
  against transcript sequences; ii) aligning against sequences of genome
  assemblies i.e. standard chromosome sequences, thus requiring the outputs
  to be translated in transcript coordinates. The first option can be easily
  handled by many aligners (e.g. Bowtie), given a reference FASTA file where
  each sequence represents a transcript, from the beginning of the 5' UTR to
  the end of the 3' UTR. The second procedure is based on reference FASTA
  files where each sequence represents a chromosome, usually coupled with
  comprehensive gene annotation files (GTF or GFF). The STAR aligner, with
  its option --quantMode TranscriptomeSAM (see Chapter 6 of its
  \href{http://labshare.cshl.edu/shares/gingeraslab/www-data/dobin/STAR/STAR.posix/doc/STARmanual.pdf}{manual}),
   is an example of tool providing such a feature.
}
\examples{
## ## compute and add the p-site datails
## psite_offset <- psite(reads_list, flanking = 6, extremity = "auto")
## reads_psite_list <- psite_info(reads_list, psite_offset)
##
## ## codon usage from transcriptome alignment
## path_fasta <- "path/to/transcriptome/FASTA/file"
## codon_usage_psite(data = reads_psite_list, annotation = mm81cdna,
##                   sample = "Samp1",
##                   fastapath = path_fasta, fasta_genome = FALSE)
##
## ## codon usage from genome alignment
## path_fasta <- "path/to/genome/FASTA/file"
## codon_usage_psite(data = reads_psite_list, annotation = mm81cdna,
##                   sample = "Samp1",
##                   fastapath = path_fasta, fasta_genome = TRUE)
}
