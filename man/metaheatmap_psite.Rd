% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metaplots.R
\name{metaheatmap_psite}
\alias{metaheatmap_psite}
\title{Ribosome occupancy metaheatmaps at single-nucleotide resolution.}
\usage{
metaheatmap_psite(
  data,
  annotation,
  sample,
  scale_factors = NULL,
  length_range = "all",
  transcripts = NULL,
  utr5l = 25,
  cdsl = 50,
  utr3l = 25,
  log_colour = F,
  colour = "black",
  plot_title = NULL
)
}
\arguments{
\item{data}{Either list of data tables or GRangesList object from
\code{\link{psite_info}}.}

\item{annotation}{Data table as generated by \code{\link{create_annotation}}.}

\item{sample}{List of either character strings specifying the name of the
sample(s) of interest or character string vectors specifying the name of
their replicates. In the latter case the final metaheatmap for each
element of the list is generated by merging the corresponding replicates
exploiting the scale factors specified by \code{scale_factors}. The row(s)
of the final plot are labelled according to the name of the elements of the
list.}

\item{scale_factors}{Named numeric vector specifying the scale factors for
generating metaprofiles from multiple replicates (see \code{sample}). Scale
factors can be defined for a subset of list elements of \code{sample} i.e.
for all replicates of selected samples. If so, the remaining scale factors
are set automatically to 1. Please be careful to name each element of the
vector after the correct corresponding string in \code{sample}. No specific
order is required. Default is NULL i.e. all scale factors are automatically
set to 1.}

\item{length_range}{Integer or an integer vector specyfying the read
length(s) to be included in the analysis. Default is "all" i.e. all read
lengths are used.}

\item{transcripts}{Character string vector listing the name of transcripts to
be included in the analysis. Default is NULL i.e. all transcripts are used.
Please note: transcripts with either 5' UTR, coding sequence or 3' UTR
shorter than \code{utr5l}, \eqn{2*}\code{cdsl} and \code{utr3l},
respectively, are automatically discarded.}

\item{utr5l}{Positive integer specifying the length (in nucleotides) of the
5' UTR region flanking the start codon to be considered in the analysis.
Default is 25.}

\item{cdsl}{Positive integer specifying the length (in nucleotides) of the
CDS regions flanking both the start and stop codon to be considered in the
analysis. Default is 50.}

\item{utr3l}{Positive integer specifying the length (in nucleotides) of the
3' UTR region flanking the stop codon to be considered in the analysis.
Default is 25.}

\item{log_colour}{Logical value whether to use a logarithmic colour scale
(strongly suggested in case of large signal variations). Default is FALSE.}

\item{colour}{Character string specifying the colour of the plot. The colour
scheme is as follow: tiles corresponding to the lowest signal are always
white, tiles corresponding to the highest signal are of the specified
colour and the progression between these two colours follows either linear
or logarithmic gradients (see \code{log_colour}). Default is "black".}

\item{plot_title}{Character string specifying the title of the plot. If
"auto", the title of the plot reports the number of transcripts and the
read length(s) employed for generating the metaprofiles. Default is NULL
i.e. no title is displayed.}
}
\value{
A list containing a ggplot object ("plot") and the data table
  with the associated data ("dt").
}
\description{
This function generates two heatmap-like metaprofiles (metaheatmaps)
displaying the abundance of P-sites around the start and the stop codon of
annotated CDSs. It works similarly to \code{\link{metaprofile_psite}} but the
intensity of signal is represented by a continuous color scale rather than by
the height of a line chart. This graphical output is a good option to
visualize several profiles at once and compare results obtained with
different read lengths or in multiple conditions.
}
\details{
The intensity of signal in the metaprofiles corresponds, for each
  nucleotide, to the sum of the number of P-sites (defined by their leftmost
  position) mapping on that position for all transcripts in one or multiple
  replicates.
}
\examples{
## data(reads_list)
## data(mm81cdna)
##
## ## compute and add p-site datails
## psite_offset <- psite(reads_list, flanking = 6, extremity = "auto")
## reads_psite_list <- psite_info(reads_list, psite_offset)
##
## ## Generate metaheatmaps employing all read lengths:
## metaheat_whole <- metaheatmap_psite(reads_psite_list, mm81cdna,
##                                     sample = list("Whole"=c("Samp1")))
##
## ## Generate metaprofiles employing reads of 27, 28 and 29 nucleotides and
## ## a subset of transcripts (in this example only transcripts with at least
## ## one P-site mapping on the translation initiation site are kept):
## sample_name <- "Samp1"
## sub_reads_psite_list <- reads_psite_list[[sample_name]][psite_from_start == 0]
## transcript_names <- as.character(sub_reads_psite_list$transcript)
## metaheat_sub <- metaheatmap_psite(reads_psite_list, mm81cdna,
##                                   sample = list("sub"=sample_name),
## length_range = 27:29, transcripts = transcript_names, plot_title = "auto")
##
## ## Generate two sets of metaheatmaps, displayed in the same plot. In this
## ## example one set of metaheatmaps is based on all read lengths while the
## ## other one is generated employing only reads of 28 nucleotides:
## sample_name <- "Samp1"
## metaheat_df <- list()
## metaheat_df[["subsample_28nt"]] <- reads_psite_list[[sample_name]][length == 28]
## metaheat_df[["whole_sample"]] <- reads_psite_list[[sample_name]]
## sample_list <- list("Only_28" = c("subsample_28nt"),
##                     "All" = c("whole_sample"))
## metaheat_comparison <- metaheatmap_psite(metaheat_df, mm81cdna,
##                                          sample = sample_list)
}
